# The following script will deploy a Laravel 5 applicaion on AWS Elastic Beanstalk.
# Add to .ebextensions at the root of your application and name your commands file (e.g., commands.config)

# -------------------------------- Commands ------------------------------------
# Use "commands" key to execute commands on the EC2 instance. The commands are
# processed in alphabetical order by name, and they run before the application
# and web server are set up and the application version file is extracted.
# ------------------------------------------------------------------------------
commands:
  01updateComposer:
    command: export COMPOSER_HOME=/root && /usr/bin/composer.phar self-update

option_settings:
  - namespace: aws:elasticbeanstalk:application:environment
    option_name: COMPOSER_HOME
    value: /root

  - namespace: aws:elasticbeanstalk:application:environment
    option_name: APP_ENV
    value: local

  - namespace: aws:elasticbeanstalk:application:environment
    option_name: APP_DEBUG
    value: true

  - namespace: aws:elasticbeanstalk:application:environment
    option_name: DB_CONNECTION
    value: sqlite

  - namespace: aws:elasticbeanstalk:application:environment
    option_name: APP_TIMEZONE
    value: UTC

  - namespace: aws:elasticbeanstalk:application:environment
    option_name: APP_KEY
    value: 35t6hderthw45jerythw456hw34t

  - namespace: aws:elasticbeanstalk:application:environment
    option_name: CACHE_DRIVER
    value: file

  - namespace: aws:elasticbeanstalk:container:php:phpini
    option_name: document_root
    value: /public

  - namespace: aws:elasticbeanstalk:container:php:phpini
    option_name: memory_limit
    value: 512M

  - namespace: aws:elasticbeanstalk:hostmanager
    option_name: LogPublicationControl
    value: true

# ---------------------------- Container Commands ------------------------------
# You can use the container_commands key to execute commands for your container.
# The commands in container_commands are processed in alphabetical order by
# name. They run after the application and web server have been set up and the
# application version file has been extracted, but before the application
# version is deployed. They also have access to environment variables such as
# your AWS security credentials. Additionally, you can use leader_only. One
# instance is chosen to be the leader in an Auto Scaling group. If the
# leader_only value is set to true, the command runs only on the instance
# that is marked as the leader.
#
# Artisan commands include environment flag for production. If you are not
# deploying to a production environment, update the flag.
# ------------------------------------------------------------------------------

container_commands:
  01touchdb:
    command: "touch database/database.sqlite;chmod 0777 database/database.sqlite"
    cwd: "/var/app/ondeck"
  02migrations:
    command: "php artisan migrate"
    cwd: "/var/app/ondeck"
  03completed:
    command: "echo Completed Lumen migration"